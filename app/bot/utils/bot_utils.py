import asyncio

from loguru import logger
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest
from aiogram.types import CallbackQuery, InlineKeyboardMarkup
from sqlalchemy.ext.asyncio import AsyncSession

from app.api.typization.responses import STeam
from app.redis.custom_redis import CustomRedis
from app.redis.redis_operations.team import get_member_data_by_team_id
from app.bot.keyboards.user_keyboards import main_keyboard, invite_keyboard, back_keyboard, delete_message_keyboard
from config import bot


async def send_message_to_leader(
        redis: CustomRedis,
        session: AsyncSession,
        team_id: int,
        message: str = "–£ –≤–∞—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–µ"
) -> None:

    try:
        leader = await get_member_data_by_team_id(redis=redis, session=session, team_id=team_id, role="leader")
        if leader:
            await bot.send_message(chat_id=leader.user_id, text=message, reply_markup=delete_message_keyboard())

    except TelegramForbiddenError:
        logger.warning(f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ª–∏–¥–µ—Ä—É.")


async def send_invite_to_user(
        redis: CustomRedis,
        invite_id: int,
        invite_user_tg_id: int,
        team: STeam
) -> None:
    try:

        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ Telegram...")

        message = await bot.send_message(
            chat_id=invite_user_tg_id,
            text=f"–í–∞–º –ø—Ä–∏—à–ª–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É {team.name}\n\n"
                 f"–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team.description or '–Ω–µ—Ç'}",
            reply_markup=invite_keyboard(invite_id=invite_id)
        )

        await redis.set_value_with_ttl(f"invite_message_process:{invite_id}", value=str(message.message_id))
        await asyncio.sleep(0.5)

        await bot.send_message(
            chat_id=invite_user_tg_id,
            text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=main_keyboard(user_id=invite_user_tg_id)
        )
        logger.info("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

    except TelegramForbiddenError:
        logger.warning(
            f"–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {invite_user_tg_id}. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.")


async def send_edit_message(call: CallbackQuery, message: str, keyboard: InlineKeyboardMarkup) -> None:

    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {call.from_user.username}")
        await call.message.edit_text(text=f"`{message}`", reply_markup=keyboard, parse_mode="Markdown")
        await call.answer()

    except TelegramBadRequest:
        logger.warning("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å–ø–∞–º –∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ).")
        await call.answer(message)


async def clear_message_and_answer(call: CallbackQuery, message: str) -> None:

    try:
        await call.message.delete()
        await call.answer(message)

    except Exception as e:
        logger.warning(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await call.answer(message)


def get_bot_description() -> str:
    description = (
        "ü§ñ MiniApp Bot - –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ö–∞–∫–∞—Ç–æ–Ω–∞—Ö –†–¢–£ –ú–ò–†–≠–ê\n\n"
        "üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ö–∞–∫–∞—Ç–æ–Ω–æ–≤\n"
        "‚Ä¢ –£–¥–æ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫\n"
        "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö\n\n"
        "üîπ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:\n"
        "‚Ä¢ Backend: FastAPI, aiogram\n"
        "‚Ä¢ –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: PostgreSQL, Redis\n"
        "‚Ä¢ Frontend: React.ts, Vite, axios, zod\n"
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: sdk-react\n\n"
        "üéØ –ù–∞—à–∞ —Ü–µ–ª—å - —Å–¥–µ–ª–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ö–∞–∫–∞—Ç–æ–Ω–∞—Ö –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º!"
    )

    return description
